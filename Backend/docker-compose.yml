services:
  postgres:
    container_name: postgres_db
    image: postgres:latest
    restart: always
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./Persistence_data/insert_data.sql:/docker-entrypoint-initdb.d/insert_data.sql

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "${PGADMIN_PORT}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - postgres

  api:
      build:
        context: .
        dockerfile: Backend.Api/Dockerfile
      depends_on:
        - postgres
      environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - ConnectionStrings__DefaultConnection=Host=postgres;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      ports:
        - "5000:80"
  migration:
    build:
      context: .
      dockerfile: Backend.Api/Dockerfile
    command: ["dotnet", "ef", "database", "update", "--project", "Backend.Api"]
    depends_on:
      - postgres
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}

volumes:
  postgres_data: